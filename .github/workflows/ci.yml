name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (black/isort/flake8/mypy)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install deps (dev)
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Black
        run: black --check .
      - name: isort
        run: isort --check-only .
      - name: Flake8
        run: flake8 .
      - name: MyPy (soft-fail initially)
        run: mypy frl || true

  test:
    name: Unit tests (pytest)
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          # CPU-only wheels for CI; safe to skip if your tests don't need torch
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
      - name: Run pytest (skip slow)
        run: |
          pytest -m "not slow" --maxfail=1 --disable-warnings -q --cov=frl --cov-report=xml
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

  smoke:
    name: Smoke run (tiny federated run)
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
      - name: Install deps (runtime)
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
      - name: Run smoke script (auto-detect)
        shell: bash
        run: |
          set -eux
          if [ -f scripts/run_federated.py ]; then
            python scripts/run_federated.py \
              --dataset mnist \
              --scenario frl/scenarios/s1_equal_dist_diff_size.yaml \
              --clients 3 --rounds 1 --local-epochs 1 || true
          else
            python - <<'PY'
import importlib.util, sys
sys.exit(0) if importlib.util.find_spec("frl") else sys.exit(1)
PY
          fi

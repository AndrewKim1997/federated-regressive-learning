name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:
    inputs:
      run_cifar_smoke:
        description: "Also run CIFAR-10 smoke (requires torchvision)"
        required: false
        default: "false"

# Cancel in-progress runs on the same branch
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

# Global env for deterministic, lightweight runs
env:
  PYTHONHASHSEED: "42"
  OMP_NUM_THREADS: "1"
  OPENBLAS_NUM_THREADS: "1"
  MKL_NUM_THREADS: "1"

jobs:
  lint:
    # Lint should not block merges at the beginning; set to true later if desired
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (single version for lint)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ruff
        run: python -m pip install -U pip ruff

      - name: Ruff check
        run: ruff check .

  test:
    name: Unit tests (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # PEP 604 syntax requires 3.10+. You can keep just ["3.11"] if you prefer.
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Upgrade pip
        run: python -m pip install -U pip

      - name: Install package (dev extras)
        run: pip install -e .[dev]

      # NOTE: Torch/torchvision are NOT required for our tests.
      # If you ever need them, add an extra step to install from the PyTorch index.

      - name: Run pytest
        run: pytest -q

  smoke:
    name: MNIST smoke run
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install package (runtime only)
        run: |
          python -m pip install -U pip
          pip install -e .

      - name: Generate S1 scenario (MNIST)
        run: |
          python -m frl.scenarios.scenario_gen \
            -c frl/scenarios/s1_equal_dist_diff_size.yaml \
            -o results/scenarios --preview

      - name: Run FRL (1 round, quick)
        run: |
          python scripts/run_federated.py \
            --dataset mnist \
            --scenario frl/scenarios/s1_equal_dist_diff_size.yaml \
            --aggregator frl \
            --rounds 1 --local-epochs 1 --batch-size 256 --lr 0.1 \
            --log-dir results/logs

      - name: Make figures/tables
        run: python scripts/make_fig_tables.py --glob "results/logs/*.csv" --outdir results/figures || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
            name: logs-${{ github.run_number }}
            path: results/logs
            if-no-files-found: warn

      - name: Upload figures
        uses: actions/upload-artifact@v4
        with:
            name: figures-${{ github.run_number }}
            path: results/figures
            if-no-files-found: warn

  cifar_smoke:
    # Optional example job; runs only when manually requested (workflow_dispatch input)
    if: github.event_name == 'workflow_dispatch' && inputs.run_cifar_smoke == 'true'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install package + torchvision (CPU)
        run: |
          python -m pip install -U pip
          pip install -e .
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu

      - name: CIFAR-10 S2 smoke (1 round)
        run: |
          python -m frl.scenarios.scenario_gen \
            -c frl/scenarios/s2_hetero_dist_diff_size.yaml \
            -o results/scenarios --preview
          python scripts/run_federated.py \
            --dataset cifar10 \
            --scenario frl/scenarios/s2_hetero_dist_diff_size.yaml \
            --aggregator frl \
            --rounds 1 --local-epochs 1 --batch-size 256 --lr 0.1 \
            --log-dir results/logs || true

      - name: Upload CIFAR smoke logs
        uses: actions/upload-artifact@v4
        with:
          name: cifar-smoke-logs-${{ github.run_number }}
          path: results/logs
          if-no-files-found: warn
